webGL은 웹상에서 그래픽을 표현할 때 쓰는 라이브러리, js를 사용, 2D, 3D 그래픽 가능, 3D에 많이 씀
GPU를 이용해서 그림을 그려서 성능이 굉장히 좋음
lowlevel이라서 바닥부터 구현해야하는 애라서, 간단한 도형하나만 그리는 데에도 엄청난 코드의 양이 필요함
--> 할 수 있는 일은 많지만 개발이 굉장히 오래걸리고 까다로움,
--> three.js가 webGL을 쉽고 간단하게 사용할 수 있도록 해줌

three.js말고도 많지만 가장 인기가 많음, 젤 좋다고는 할 순 없는데 제일 많이 쓰임
threejs.org를 가면 그걸 이용한 프로젝트들이 있음

헉 맥쓰시네 맥북사야되나 ㅋㅋ

시각적인 효과, 임팩트를 줄 때 효과적임

studiomeal.com도 3D로 구현되어 있음

에디터는 vscode
vscode의 자체의 기능, 플러그인들 활용할 거라서

네번째 탭(확장)을 눌러보면 추가적인 기능, 플러그인들을 설치할 수 있는데
live server를 설치(로컬에서 웹서버를 구동해서 손쉽게 테스트 할 수 있음)

three.org에서 download클릭,
다운 받은 후 build폴더 안의 파일 세개, three.js,three.min.js는 일반적인 js를 쓰는 방법( html에 src속성의 경로를 넣고 씀)
module이 붙은 애는 js의 module방식,
우리는 모듈방식으로 개발을 할거긴한데 일단 지금은 처음해보는 거니까 제일 기본적인 방법인 위의 방법을 할 것임
min은 압축된 버전, 둘다 같은 기능을하는데 three.js를 갖다 쓰려고, 복사 붙여넣기

three.org에 documentation의 개발 문서를 보면 완성된 html코드가 있는데 얘를 그대로 복붙
(documentation에는 main.js 파일을 만들고 그 경로를 html에 따라가는 소스코드라서
--> main.js가 따로 만들어져있는 버전이라 그냥 선생님꺼 복붙함)

three.js를 사용하면 웹서버를 구동하고 그 위에서 페이지를 열어야 동작하느 ㄴ애들이 있음
--> 서버 위에서 사용하는 걸 실습
live server를 설치했다면 코드에서 우클릭하면 open live server가 뜸
--> 로컬파일의 html을 연게 아니라 주소창에서도 127.0.0.1:5500이 뜸
--> 페이지에 뭔가 수정이 있을 때 저장하면 새로고침을 따로 안해도 자동으로 수정이 됨

앞으로 웹팩을 사용할거라 라이브서버로 사용할 일은 없긴한데 알아두기


--------------------------------

2번째 방법, 모듈을 이용한 방법
자바 스크립트 모듈을 이해해야 사용할 수 있음

자바스크립트모듈이란?
module_basic 폴더를 vscode에 드래그앤드롭
index.html을 만들고 !+tab을 누르면 html 템플릿이 나옴
main.js, hello.js를 만들기

hello.js에 func1을 만들기, 콘솔창에 hello1! 기능함
main.js에서는 hello1함수를 호출
--> index.html에는 main.js, hello.js 두개가 다 필요함
--> index.html에서 script 입력 후 tab을 누르면 작동으로 태그가 달림,
이후 live server로 구동한 후 f12를 눌러 개발자도구를 열면

--> 이걸 모듈을 쓰는 방식으로
모듈의 장점? js파일이 수많다고 생각하면 다 연결을 해줘야함
모듈은 메인되는 파일 하나만 연결해주고 js안에서 자체에서 다른 js를 포함시킬 수 있음

index.html의 main.js를 script로 연결해주는 부분에서, type을 module로
파일을 외부에서 사용하게 하려면 export로 내보내 줘야함
hello.js의 function code앞에 export 키워드를 넣기
main.js 에서는 import { hello1 } from '(경로)';
같은 경로일때는 ./hello.js

똑같은 방식으로 hello2도 만들어서 할 수 있음,
보통은 같은 파일에서 가져올 때는 import에 , hello2 넣기

export하는 게 여러개일 땐, 그리고 그걸 다 가져오고 싶을 땐
import *(모두) as hello from './hello.js
이렇게 한 후 hello를 통해 멤버 함수 접근하듯이 hello.hello1을 ㅗ사용
hello가 아니라 hell으로 해도 가능

import할 때 중괄호로 감싸지 않을땐 오류가 나는데,
이때 export 함수(hello.js의 hello1)에 default 키워드를 추가하면 hello1만 불러와짐
오히려 default 함수를 불러올 때 {}를 쓰면 오히려 에러남
default를 썼다면 걔를 불러올때 중괄호 쓰지않기


---------------------------------------
01_normal에 있던 index.html을 카피한 후
02_module에 붙여넣고 이 폴더를 vscode에 드래그앤드롭
threejs.org에서 다운받은 build폴더 안의 three.module.js를 복붙

얘는 module에서 사용할 땐 노필요, 밑에 script의 타입을 기입
전 시간에 script type = module src = "three.js"> 이런 식으로 한 거는 외부파일로 만들었을 때 이야기
지금은 우리가 직접 javascript코드를 script 코드 안에 넣어놓은 상황이니까 그럴땐 type만 추가해주면 됨

저장하면 오류뜸,
사용하려면 import를 해야함


외부파일로 만들때는,
script안의 내용들을 모두 긁어서 새 파일(main.js)로 만든 후, 걔를 script type=module src=main.js 이런 식으로

three.js에서도 모듈방식을 권장하는 중,
모듈쪽 소스코드에는 구현이 되어있는데 구방법으로는 구현이 안 된 기능들이 몇개 있음