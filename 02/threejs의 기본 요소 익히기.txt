수업 자료에 있는 이미지를 먼저 이해하고 시작

무대가 Scene, 무대 위에 배우, 소평, 조명, 카메라가 다 무대 위에 올라감
배우가 하나지만 다른 소품들, 자동차, 물체들, object하나하나가 mesh
mesh는 geometry(모양), material(재질)로 구성됨
재질은 색깔, 거친 표면의 느낌, 맨질맨질한 느낌 등

카메라가 있음,
시야각이라는 걸 가짐(어느정도의 시야로 표현해줄 것인가)
동물마다 시야각이 다 다른데, 각도가 다 다름-->왜곡되어있는 게 다 다름

조명도 있음
재질이 어떤 거냐에 따라 필요없을수도
조명이 없어도 눈에 보이거나, 조명이 있어야 눈에 보일수도

화면에 그려주는 애가 renderer(장면을 볼때는 카메라가 비추는 영역, 각도로 카메라 입장에서 보임)
--> 카메라가 보여주는 장면을 보여주고 있음

중요한건 위치,
threejs는 3차원이니까 축의 방향의 기준은 카메라가 보고 있는 곳이 정면이라고 하면,
x축은 좌우, y축은 위아래, 위로가는게 +아래가 -, z가 앞뒤, 앞으로 나오면 +, 뒤로 가면 마이너스

-------------------------------------------
기본장면 만들기 - renderer

02_basic을 열고
터미널을 열어서 npm i 로 패키지 설치하기
npm i three로 threejs도 설치
src에 index.html을 만듦
새파일ㅇ르 만들어서 main.css를 만들기
body 마진 0
main.js도 생성, 이곳에 three.js
import 먼저

threejs를 구성하는 애중에 renderer를 먼저 만들기
renderer에 사이즈 지정, 풀스크린으로 할거니까 innerWidth, innerHeight
renderer.domElement가 있는데 얘가 캔버스, 화면에 조립을 해서 보여주면 됨
--> document.body.appendChild로 조립
이 캔버스에 three.js로 그려주는것
이렇게 하는 방법도 있고
html에 canvas를 만들고 걔를 가져와서 처리하는 방법도 있음,
canvas를 html에 직접 써주고 걔를 활용하는게 활용범위가 넓다고 생각됨, three.js로 뭔가 만들때 body에 canvas만 있다는 가정은 할 수 없고
여러 요소가 있을 텐데, 이 캔버스도 다른 요소들과 같이 위치를 지정해두는 편이 더 편함, 좀더 직관적이고(js에서 동적으로 하는 것보다)
둘다 노상관

--> html에 canvas에 id를 주기
main.css에서 threecanvas를 조정해주기
그냥놔두면 스크롤바가 생길 수 있는데 방지하기 위해 position을 absolute, left0 top0
앱솔루트는 다른 요소에 관련없이 위에 붕떠있는것처럼 조정되기 때문에

똑같이 render를 만드는데 canvas의 속성값을 canvas로 주기