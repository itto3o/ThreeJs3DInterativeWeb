위치 이동
04_transform 폴더를 vscode에서 드래그앤 드롭, readme에 있는 npm i 설치들 다 설치, three.js와 dat.gui도 모두 설치

ex01.js에는 기본 형만,

npm start로 서버를 구동하면 gui에 축 헬퍼로 축도 나타나있고, gui에 카메라 x,y,z가 있음

draw 함수에 mesh.position.y = 2; 로 하면 2로 올라감, 애니메이션을 주려면 값에 변화를 주면 됨

지금까지 position설정을 해줬는데, 이거 말고 다른 방법이 있음
mesh.position.set((x,y,z) 0,0,0);
취향 차이

position이라는 오브젝트는 무엇인가?
threeorg에서 vector3를 보면, vector3는 3차원 공간에서 점의 위치를 나타내는 객체임, x y z값을 갖고있음
--> 길이(0,0,0에서 오브젝트까지의 거리) mesh.position.length();
mesh.position.distanceTo(new THREE.Vector3(1, 2, 0)) : 새로운 벡터까지의 거리
--> (camera.position) 등을 인자로 넣을 수 있음


-----------------------------------------
크기 조정
ex02.js

mesh.scale(x,y,z or set 가능)
mesh.scale.x = 2; : x축 방향으로 2배만큼 늘어남
mesh.scale.y = 0.5; : 납작해짐

mesh.scale.set(1, 1, 1);


------------------------------------------
회전

03.js 만들고

mesh.rotation.x = (라디안 값, 2파이가 360도) THREE.mathUtils.degToRad(45);
mesh.rotation.x = Math.PI(파이가 180도) / 4; 니까 180/4 = 45
mesh.rotation.x = 1;(3.14가 1파이니까 얘는 60도 조금 안되겠네~)
mesh.rotation.x += delta; : x축을 기준으로 돌아감

회전은 주의해야할 게 있음
draw함수 바깥에서, 45도 돌린 후, 20도 x축을 기준으로 회전을 하면 조금 이상해짐,
우리가 원한건 y축으로 45도 한 후에 천장을 보려고 고개를 드는 느낌으로 생각했는데,
실제로는 y축으로 45도 돌렸다고 축이 이동하는 건 아니기 때문에 원래있던 x축으로 20도를 올려버려서 약간.. 비스듬히 됐다고 해야하나


이게 맞긴한데 이렇게되면 불편한 경우가 많이 생김,
--> 회전 축을 독립시켜서 바꿔줄 수 있음
mesh.rotation.reorder('YXZ');


reorder가 이해가 잘 안돼서 찾아봤는데,
여러 축을 회전 시킬때 무슨 축부터 회전시킬지 그 순서를 정해주는 함수래
그래서 Y축을 회전 후, X축을 회전 후, Z축을 회전하면 저렇게 되는듯
