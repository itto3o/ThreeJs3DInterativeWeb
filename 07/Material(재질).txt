material
npm i 로 패키지 설치, three.js 설치, npm start

MeshStandard를 MeshBasic으로 고치기
--> 입체감이 사라짐

회전 위해서 Controls도 추가
OrbitControls

camera.y가 1.5되어있는데 얘 지우기 --> 정중앙에 오게 되는데
controls를 추가하면 자동으로 camera가 내려다보게 됨,
--> controls자체가 추가되면서 lookat으로 mesh를 바라보게 되기 때문 ( 그냥 y 1.5에 한 것에서 lookat되는 효과가 있다는 말)

MeshBasic은 입체감이 없는 애, 이미지가 포장이 되어있고 빛, 그림자에 영향을 안받음
--> light도 필요 없음
기존 코드의 light 부분을 지워도 아무런 변화가 없음
--> 성능이 가장 빠름, material중에 가장 성능이 좋음


------------------------------------------
MeshLambertMaterial, MeshPhongMaterial

ex02.js

두개를 비교하면서 할거ㅏㄹ
mesh도 두개 만들 것임

box가 아닌 sphere로

material은 1, 2로 해서 각각 다르게,

이렇게하면 똑같은 위치에 서로 겹쳐있을 테니까 위치 조정
mesh1은 -1.5, mesh2는 1.5

--> 이렇게 하면 안보임,
MeshBasic일때는 light가 필요없어서 지웠는데, 이제는 필요함
빛이 없어서 안보이는 것
--> 배경을 하얗게 한다면?
--> 검게 보이게 됨

ambientLight, directionalLight도 만들어주고 position도 수정 후 scene.add해주기
--> 두개가 보이기 시작하는데 뭔가 달라보임
--> Lambert는 하이라이트, 반사광이 없는 재질(무광 느낌), Phong은 하이라이트, 반사광 표현(유광 느낌)이 가능함
--> phong은 정도를 조절할 수 있음

shininess : 시니니스 샤이니니스, 1000으로 하면 더 당구공처럼 유광공이 됨
0으로 한다면 Lambert와 똑같아짐
Lambert가 성능은 더 좋음, (신경쓸 게 없으니까)


-----------------------------------------
MeshStandardMaterial

ex03.js


MeshPhongMaterial이랑 MeshStandardMaterial로 비교

첫번째거를 phong, 두번째거를 standard
phong이 하이라이트가 기본적으로 보이ㅡㄴ데, standard는 하이라이트 부분이 별로 안보임
둘다 하이라이트, 반사광 효과를 낼 수 있는데

phong은 shininess : 1000으로 할 수 있엇는데,
standard는 roughness(거칠기) : 0으로 하면 매끄러워보임, 0.3으로하면 phong과 비슷해지는데 느낌이 또 다르긴 함
1로 하면 무광처럼 보임
metalness(금속 재질) 성질도 있음, 0.3으로 하면 살짝 어두워짐, 0이 표준, 1로 하면 까매지고, 10이 되면 완전 까매짐
금속 느낌이 나나? 플라스틱이 아니라 금속이 되...겠죠

둘중에 뭘 쓸건지는 본인이 결정,
성능은 phong쪽이 더 빠름


-----------------------------------
각지게 표현하기, flatShading

ex04.js

geometry로 flatShading으로 해봤었음

material에 flatShading : true으로 하면 됨, lowPoly스타일로 바뀜


------------------------------------
Mesh의 앞뒷면

ex05.js

material의 면, side에 대해
vertex, face(면), edge(선)
face(side)를 보이게할건지 안보이게 할건지 조절

three mesh의 겉면, 앞면이 보이는 것.
티나게 하기 위해 boxGeometry로 바꾸고 하나만 남기기

directionalLight도 y를 1로 바꾸면 좀 더 밝아짐

면의 뒤쪽, 안쪽면을 보이게 할건지
(도형 안으로 들어가면 안쪽 면이 사라짐)

material에서 side: THREE.FrontSide(는 기본값)
side: THREE.BackSide(뒷면만 보임) 양각/음각에서 음각느낌
side: TRHEE.DoubleSide(양쪽 다)


-------------------------------------
텍스쳐 이미지 로드하기

ex06.js

텍스쳐 이미지 로드하기
(외부 이미지를 로드해서 material 겉면에 붙여주는 작업)

이미지가 필요함, three model texture전용으로 만들어진 이미지를 사용하는게 좋음
구글에 3d texture로 입력하면 3dtextures.me에 접속,
카테고리가 있는데 (brick)벽돌 이미지를 클릭하면 download가 가능, 얘를 다 다운 받음

src에 textures 폴더가 있음, 여기에 이미지가 들어잇는데 여기에 폴더(brick)을 만들고 다운받은 것들을 여기다 붙여넣기

basiccolor를 로드하려면 textureloader라는 객체를 사용해야함
const textureLoader = new THREE.TextureLoader();
textureImage = textureLoader.load((경로)'/textures/brick/Brick_wall_...');
--> 404로 파일을 찾을 수 없다고 나옴

웹팩을 사용하고 있는데,
웹팩 설정할 때 그대로 복사할 파일들은 경로설정을 해줘야함
텍스쳐폴더를 사용하고 있는데 여기에 추가를 안해줌
plugin patterns에 {from: "./src/textures", to: "./textures"},
터미널 눌러서 서버를 종료했다가 다시 구동
--> 404에러 사라짐
잘 까먹음!!

textureImage를 console.log로 출력해보면 textureImage로 출력됨

load()에 인자가 더 들어갈 수있음,
로딩중이라던지, 로드하다가 에러가 났다던지에 호출할 콜백함수를 정할 수 있음
() => {} 로 가능, 첫번째가 로드됐을때, 두번째가 로드 중, 세번째가 로드 에러

로드 후에
material부분에
map 이라는 속성으로 넣으면 됨
map: texture

원래 원본 이미지랑 다르게 빨간데, color속성을 없애면 원래 색깔로 됨
MeshStandardMaterial로 적용돼서 하이라이트, 반사광, 그림자 모두 잘 표현되어있음
--> standard가 아니라 basic이라면? 그림자, 하이라이트가 없어짐