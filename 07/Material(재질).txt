material
npm i 로 패키지 설치, three.js 설치, npm start

MeshStandard를 MeshBasic으로 고치기
--> 입체감이 사라짐

회전 위해서 Controls도 추가
OrbitControls

camera.y가 1.5되어있는데 얘 지우기 --> 정중앙에 오게 되는데
controls를 추가하면 자동으로 camera가 내려다보게 됨,
--> controls자체가 추가되면서 lookat으로 mesh를 바라보게 되기 때문 ( 그냥 y 1.5에 한 것에서 lookat되는 효과가 있다는 말)

MeshBasic은 입체감이 없는 애, 이미지가 포장이 되어있고 빛, 그림자에 영향을 안받음
--> light도 필요 없음
기존 코드의 light 부분을 지워도 아무런 변화가 없음
--> 성능이 가장 빠름, material중에 가장 성능이 좋음


------------------------------------------
MeshLambertMaterial, MeshPhongMaterial

ex02.js

두개를 비교하면서 할거ㅏㄹ
mesh도 두개 만들 것임

box가 아닌 sphere로

material은 1, 2로 해서 각각 다르게,

이렇게하면 똑같은 위치에 서로 겹쳐있을 테니까 위치 조정
mesh1은 -1.5, mesh2는 1.5

--> 이렇게 하면 안보임,
MeshBasic일때는 light가 필요없어서 지웠는데, 이제는 필요함
빛이 없어서 안보이는 것
--> 배경을 하얗게 한다면?
--> 검게 보이게 됨

ambientLight, directionalLight도 만들어주고 position도 수정 후 scene.add해주기
--> 두개가 보이기 시작하는데 뭔가 달라보임
--> Lambert는 하이라이트, 반사광이 없는 재질(무광 느낌), Phong은 하이라이트, 반사광 표현(유광 느낌)이 가능함
--> phong은 정도를 조절할 수 있음

shininess : 시니니스 샤이니니스, 1000으로 하면 더 당구공처럼 유광공이 됨
0으로 한다면 Lambert와 똑같아짐
Lambert가 성능은 더 좋음, (신경쓸 게 없으니까)


-----------------------------------------
MeshStandardMaterial

ex03.js


MeshPhongMaterial이랑 MeshStandardMaterial로 비교

첫번째거를 phong, 두번째거를 standard
phong이 하이라이트가 기본적으로 보이ㅡㄴ데, standard는 하이라이트 부분이 별로 안보임
둘다 하이라이트, 반사광 효과를 낼 수 있는데

phong은 shininess : 1000으로 할 수 있엇는데,
standard는 roughness(거칠기) : 0으로 하면 매끄러워보임, 0.3으로하면 phong과 비슷해지는데 느낌이 또 다르긴 함
1로 하면 무광처럼 보임
metalness(금속 재질) 성질도 있음, 0.3으로 하면 살짝 어두워짐, 0이 표준, 1로 하면 까매지고, 10이 되면 완전 까매짐
금속 느낌이 나나? 플라스틱이 아니라 금속이 되...겠죠

둘중에 뭘 쓸건지는 본인이 결정,
성능은 phong쪽이 더 빠름


-----------------------------------
각지게 표현하기, flatShading

ex04.js

geometry로 flatShading으로 해봤었음

material에 flatShading : true으로 하면 됨, lowPoly스타일로 바뀜


------------------------------------
Mesh의 앞뒷면

ex05.js

material의 면, side에 대해
vertex, face(면), edge(선)
face(side)를 보이게할건지 안보이게 할건지 조절

three mesh의 겉면, 앞면이 보이는 것.
티나게 하기 위해 boxGeometry로 바꾸고 하나만 남기기

directionalLight도 y를 1로 바꾸면 좀 더 밝아짐

면의 뒤쪽, 안쪽면을 보이게 할건지
(도형 안으로 들어가면 안쪽 면이 사라짐)

material에서 side: THREE.FrontSide(는 기본값)
side: THREE.BackSide(뒷면만 보임) 양각/음각에서 음각느낌
side: TRHEE.DoubleSide(양쪽 다)


-------------------------------------
텍스쳐 이미지 로드하기

ex06.js

텍스쳐 이미지 로드하기
(외부 이미지를 로드해서 material 겉면에 붙여주는 작업)

이미지가 필요함, three model texture전용으로 만들어진 이미지를 사용하는게 좋음
구글에 3d texture로 입력하면 3dtextures.me에 접속,
카테고리가 있는데 (brick)벽돌 이미지를 클릭하면 download가 가능, 얘를 다 다운 받음

src에 textures 폴더가 있음, 여기에 이미지가 들어잇는데 여기에 폴더(brick)을 만들고 다운받은 것들을 여기다 붙여넣기

basiccolor를 로드하려면 textureloader라는 객체를 사용해야함
const textureLoader = new THREE.TextureLoader();
textureImage = textureLoader.load((경로)'/textures/brick/Brick_wall_...');
--> 404로 파일을 찾을 수 없다고 나옴

웹팩을 사용하고 있는데,
웹팩 설정할 때 그대로 복사할 파일들은 경로설정을 해줘야함
텍스쳐폴더를 사용하고 있는데 여기에 추가를 안해줌
plugin patterns에 {from: "./src/textures", to: "./textures"},
터미널 눌러서 서버를 종료했다가 다시 구동
--> 404에러 사라짐
잘 까먹음!!

textureImage를 console.log로 출력해보면 textureImage로 출력됨

load()에 인자가 더 들어갈 수있음,
로딩중이라던지, 로드하다가 에러가 났다던지에 호출할 콜백함수를 정할 수 있음
() => {} 로 가능, 첫번째가 로드됐을때, 두번째가 로드 중, 세번째가 로드 에러

로드 후에
material부분에
map 이라는 속성으로 넣으면 됨
map: texture

원래 원본 이미지랑 다르게 빨간데, color속성을 없애면 원래 색깔로 됨
MeshStandardMaterial로 적용돼서 하이라이트, 반사광, 그림자 모두 잘 표현되어있음
--> standard가 아니라 basic이라면? 그림자, 하이라이트가 없어짐


---------------------------------
로딩 매니저(여러 개의 텍스쳐 이미지)

ex07.js

여러개의 텍스쳐 이미지를 동시에 로드할때 사용
new THREE.LoadingManager(); 만들기
.on start = () => { console.log(); // 로드가 시작됐을때
.onProgress = img => { // 이미지 여러개를 로드할 때 하나하나 될때마다 발생
console.log(img + '로드');
}
.onLoad // 로드가 다 끝났을 때
.on Error : 에러났을때

textureLoader에서 했던거랑 비슷함
이렇게 해준 loadingManager를 TextureLoader를 만들때 인자로 넣어주면 texture가 동작할때 loadingManager가 실행됨

텍스쳐를 여러개 로드
다운로드 받았던 이미지들을 5개 로드
이미지 이름에 있는 특성 활용
5개 각각 로드하고

material의 map을 바꿔주고

로딩매니저가 일하면서 콘솔에 정한대로 출력
로드 시작
img + 로드 * 5
로드 완료

로딩매니저를 안쓰면 textureLoader로 여러개 로드하는 것
(똑같은 효과가 있음)

로딩매니저는 여러개 로드 처리할때 컨트롤 할 수 있는 부분이 있음


-----------------------------------
텍스쳐 변환

ex08.js
텍스처 이미지 변환
(회전, 이동 등)

패턴만 잇는건 위치 변화는 인지하기 어려워서
새로운 텍스쳐이미지 다운로드받기
3dtextures.me에 skull 다운로드, 5개 다

textures폴더안에 skull만들고 다 옮기기

texture에 이미지를 load하고 offset하면 옮겨짐
offset.x = 0.3; 하면 이동하는데, 이미지가 옮겨지고 나머지 부분이 끝 픽셀이 그냥 늘어나기만 해서 이상해짐
--> texture.wrapS = THREE.RepeatWrapping;
이후 offset.y = 0.3을 해주면 또 y쪽으로 이미지가 이상해짐
--> texture.wrapT = THREE.RepeatWrapping

texture.repeat.x = 2라고 하면 이미지가 홀쭊하게 쪼그라듦 (한칸에 이미지가 2개 들어감)
이상태에서 repeat.y = 2로 하면 4분할처럼 됨
(이상태에서 wrapS, wrapT를 안해주면 똑같이 이미지가 없는 부분은 이상해짐)

texture.rotation = (radian) 45도 돌리려면 Math.PI * 0.25 OR THREE.MathUtils.degToRad(45);
10도, 20도, 30도 돌리면 기준이 가운데가 아닌 것 같이 가운데에 있던 해골이 자꾸 왼쪽으로 감
--> 기준을 가운데로 잡기 위해
texture.center.x = 0.5;
texture.center.y = 0.5; 
--> 이걸로 회전의 기준점을 설정할 수 있음


---------------------------------------
ex09.js

여러가지 텍스쳐가 적용된 큐브

material 이미지 하나가 들어갔었는데,
면마다 다른 이미지를 쓴다.

mc(마인크래프트)style에 있는 16x16 짜리를 사용할 것임

6개 다 load하기 불러오기

하나를 적용시켜보면, 16픽셀을 늘린거라 뿌옇게 보이는데, (standardMaterial이 아니라 basic으로 불러와도)
얘는 나중에


얘네로
materials = [ new THREE.MeshBasicMaterial({ map: rightTexture }), ... ];로 배열을 하나만들어서, 이 배열마다 material을 만들어주기
(순서 지켜야함!)

이 배열을 mesh를 만들때 materials를 넣어주면 됨

픽셀이 살아있는 이미지로 만들려면,
각 texture에 속성을 주면 됨
rightTexture.magFilter = THREE.NearestFilter;
깨끗한 픽셀이 살아있는 이미지가 됨
작은 이미지의 픽셀을 살려서 작업하려면 nearestfilter를 해주면 됨

--> 면마다 다른 텍스쳐를 로드할때
각각 텍스쳐를 불러와서, materials 배열을 만들어서 mesh를 만들때 이 배열을 넣어주면 된다.


-------------------------------------
MeshToonMaterial(만화 느낌)

ex10.js

텍스쳐 이미지 로드하는 부분들은 다 지워주고

mesh를 새로 만들기
gemotry는 ConeGeometry() // 원뿔 모양
처음에 바닥 반지름, 그다음 높이, 그다음 세그먼트(몇개로 나눌건지)
반지름 1, 높이 2, 세그먼트 128
const material = new THREE.MeshToonMaterial
color : plum

mesh = new THREE.Mesh(geomtry, material)
scene.add(mesh);

만화처럼 그림자 부분이 선명하게 나눠짐

2D애니메이션도 투톤으로 하니까...
톤의 단계를 나눌 수 도 있음
--> 투톤의 단계를 해줄 그라데이션 작업이 필요한데 포토샵에서 간단히 해오기
포토샵에서 새문서>width 3, height1로 만들고
첫번째는 검은색, 두번째느 회색으로 한 후 저장, png로 textures에 gradient.png로 저장(이미 있음)
textureLoader로 로드해오기

이 텍스쳐를 mesh의 gradientMap: 의 값으로 넣어주면 
뭔가 적용이 됐는데 만화 느낌이 없어짐
--> 마인크래프트 블럭스타일의 픽셀 살려주는 (색깔의 경계를 명확히) 텍스쳐.magFilter = THREE.NearestFilter; 로 하면 단계가 늘어났음


-----------------------------------
MeshNormalMaterial

ex11.js

Normal은 법선 3D의 오브젝트의 면에 딱 수직으로 뻗어나가는 선, 이 선이 영어로 normal이라고 함

MeshNormalMaterial로 바꾸고 color를 없애면 뭔가 색깔이 무지개색이됨
법선 방향에 따라서 rgb색깔로 표현해줌, 
cone이 아니라 boxGeomtry로 하면 돌릴때마다 법선의 방향이 바뀌니까 면의 색깔도 바뀜

--> 이 느낌이 마음에 들면 쓰면 되고, 
sphere로 하면 회전을 해도 변화가 없음, 법선의 각도 자체가 일정하기 때문에 box는 틀면 각도도 바뀌는데, sphere는 어느 방향에서도, 회전해도 각도가 똑같아서 변화가 없음


-------------------------------------
MeshMatcapMaterial

ex12.js

구글에서 matcap texture download로 검색하면 www.pinterest.com의 57matcap
동그란 여러 이미지가 나오는데, matcap은 동그란 이미지에 입체감이 나게 쉐도우, 하이라이트를 적용해서 만든 이미지
--> 이걸로 우리의 mesh에 적용해줌
동그라미에 적용된 입체를 가지고 mesh에 그 느낌대로
163FREE devian MatCaps를 다운로드받으면 됨,

materail에서 MatcapMaterial로 해주고 matcap:에 matcapTex로 넣으면 됨
--> 큐브에 이 느낌이 씌워짐
sphere에 하면 원래 matcap같고, cone에도

구형태에 입체감을 넣어놓으면 이걸 우리가 만든 mesh에도 적용을 해준다.